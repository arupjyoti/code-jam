/* prepared by @arupjyoti_dutta */

#include <bits/stdc++.h>
#define lli long long int
#define f(i,x,y) for(lli i=(x);i<(y);++i)
#define PI 3.1415926535897932
using namespace std;

int main() {
	lli t,n,k,x,y;
	scanf("%lld",&t);
	f(i,0,t) 
	{
	    lli p=0,sum=0,rs=0;
	    scanf("%lld%lld",&n,&k);
	    multimap<lli,lli> mm;
	    vector<lli> vt,vm;
	    f(j,0,n)
	    {
	        scanf("%lld%lld",&x,&y);
	        mm.emplace(x,y);
	    }
	    // vt: To store exposed area of each pancakes beginning from the first pancake
	    //      (Here, a particular part of upper surface is taken into account which is not blocked by previous upper pancake )
	    // vm: To store the surface area where the upper surface of each pancake is fully exposed.  
	    for(auto j = mm.begin();j!=mm.end();++j)
	    {
	        rs=((*j).first*(*j).first) + (2 * (*j).first * (*j).second);
	        vt.push_back(rs-(p*p)); vm.push_back(rs);
	        p=(*j).first;
	    }
	    
	    // To store the sum of first k set of pancakes 
	    f(i,0,k)
	    sum+=vt[i];
	    
	    // To store the sum of next maximum k set of pancakes
	    auto f=mm.begin();
	    for(lli g=k;g<n && f!=mm.end() ;++g,++f)
	    {
	        sum=max(sum,sum-vm[g-k]+((*f).first*(*f).first)+vt[g]);
	        //cout<<"sum : "<<sum<<"\n";
	    }
	    
	    printf("Case #%lld: %.9lf\n",i+1,PI*sum);
	    
	}
	return 0;
}
